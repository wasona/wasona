---
interface Props {
  id: string;
}
const { id } = Astro.props;
const onclick = (option: string) =>
  `document.getElementById("tabbed-${id}").className = "tabbed-${option}";`;
---

<style>
  .tabbed-box {
    padding: 10px;
    /* background-color: var(--bg-1); */
    border-left: 2px dotted var(--grey);
    border-right: 2px dotted var(--grey);
  }
  .tabbed-selector {
    display: grid;
    position: sticky;
    top: 0;
    grid-template-columns: repeat(3, 1fr);
  }
  button {
    padding: 10px;
    border: 0;
    font-family: inherit;
    font-size: inherit;
    color: var(--grey);
    background-color: var(--bg-1);
    border-bottom: 1px solid var(--grey);
    border-top: 1px solid var(--bg-1); /* this is just to freeze text in place */
    border-left: 1px solid var(--bg-1);
    border-right: 1px solid var(--bg-1);
    transition: background-color 0.1s ease-out;
  }
  .tabbed-sp .button-sp,
  .tabbed-sl .button-sl,
  .tabbed-m .button-m {
    color: var(--txt);
    border-bottom: 1px solid var(--bg);
    border-top: 1px solid var(--grey);
    border-left: 1px solid var(--grey);
    border-right: 1px solid var(--grey);
    background-color: var(--bg);
  }
  button:hover {
    background-color: var(--bg-2);
  }
</style>
<style is:global>
  tabbed-box *:nth-child(even) {
    background-color: var(#400);
  }
</style>
<div id={`tabbed-${id}`} class="tabbed-sp">
  <div class="tabbed-selector">
    <button class="button-sp" onclick={onclick("sp")}>sitelen pona</button>
    <button class="button-sl" onclick={onclick("sl")}>sitelen Lasina</button>
    <button class="button-m" onclick={onclick("m")}>Translation</button>
  </div>
  <div class="tabbed-box">
    <slot />
  </div>
</div>
